{"version":3,"sources":["actions/index.js","containers/CustomToolbar.js","components/Calendar.js","containers/VisibleCalendar.js","constants/index.js","components/Project.js","containers/VisibleProject.js","components/Main.js","containers/Sidebar.js","containers/EventNewModal.js","containers/EventSelectModal.js","containers/RootModal.js","containers/ProjectNewModal.js","components/App.js","reducers/events.js","reducers/projects.js","reducers/modal.js","reducers/index.js","index.js","localStorage.js"],"names":["updateEvent","id","project","start","end","type","copyDay","fromDate","toDate","from","to","connect","state","ownProps","label","onNavigate","date","dispatch","copyToToday","Date","_ref","react_default","a","createElement","className","Heading","width","IconButton","appearance","icon","onClick","tooltip","DragAndDropCalendar","withDragAndDrop","BigCalendar","localizer","momentLocalizer","moment","formats","timeGutterFormat","eventStyleGetter","event","isSelected","style","backgroundColor","color","Calendar","events","newEventModal","moveEvent","selectEventModal","selectEvent","Pane","padding","flex","selectable","onEventDrop","resizable","step","timeslots","onEventResize","onSelectSlot","views","onSelectEvent","defaultDate","defaultView","Views","DAY","components","toolbar","CustomToolbar","eventPropGetter","eventsArray","key","projectParent","projects","push","Object","objectSpread","title","modalType","modalProps","v4","_ref2","Colors","NEUTRAL","BLUE","RED","ORANGE","YELLOW","GREEN","TEAL","PURPLE","isSameDay","dateOne","dateTwo","getDate","getMonth","getFullYear","Project","totalHours","updateProjectName","deleteProject","daysChart","updateColor","projectList","size","Paragraph","marginBottom","Strong","BarChart","height","data","Bar","dataKey","alert","map","entry","index","Cell","cursor","fill","concat","TextInputField","placeholder","marginTop","onChange","e","target","value","SelectField","keys","x","Button","is","Link","marginRight","iconBefore","intent","propKey","match","params","projectKey","eventsWDurations","duration","Math","round","_loop","i","now","hours","filter","reduce","acc","reverse","name","Main","Switch","Route","exact","path","component","VisibleCalendar","VisibleProject","projectsArray","projectKeys","collections","subProjects","result","indexOf","console","log","projectListToDisplay","newProjectModal","background","position","TabNavigation","SidebarTab","Icon","tab","hideModal","addEvent","Dialog","isShown","onCloseComplete","Table","Body","Row","isSelectable","onSelect","TextCell","selectedEvent","deleteEvent","input","Select","defaultValue","p","MODAL_COMPONENTS","NEW_EVENT_SELECT","EventNewModal","SELECT_EVENT","EventSelectModal","NEW_PROJECT","addProject","TextInput","modal","SpecificModal","App","display","containers_Sidebar","components_Main","RootModal","initalState","0","allDay","arguments","length","undefined","action","defineProperty","cur","_objectSpread3","fromStart","fromEnd","fromCopy","toCopy","getHours","initialState","modelType","modelProps","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","serialedState","stringify","setItem","saveState","getState","render","es","BrowserRouter","src_components_App","document","getElementById"],"mappings":"mWAUaA,EAAc,SAACC,EAAIC,EAASC,EAAOC,GAArB,MAA8B,CACvDC,KAAM,eACNJ,KACAC,UACAC,QACAC,QAQWE,EAAU,SAACC,EAAUC,GAAX,MAAuB,CAC5CH,KAAM,WACNI,KAAMF,EACNG,GAAIF,4FCRSG,cACb,SAACC,EAAOC,GAAR,MAAsB,CACpBC,MAAOD,EAASC,MAChBC,WAAYF,EAASE,WACrBC,KAAMH,EAASG,OAEjB,SAAAC,GAAQ,MAAK,CACXC,YAAa,SAACF,GAAD,OAAUC,EAASX,EAAQU,EAAM,IAAIG,UAPvCR,CAbO,SAAAS,GAAA,IAAEN,EAAFM,EAAEN,MAAOC,EAATK,EAASL,WAAYC,EAArBI,EAAqBJ,KAAME,EAA3BE,EAA2BF,YAA3B,OACpBG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,MAAO,KAAMZ,GAEtBO,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,WAAW,UAAUC,KAAK,aAAaC,QAAS,kBAAMf,EAAW,WAC7EM,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,WAAW,UAAUC,KAAK,cAAcC,QAAS,kBAAMf,EAAW,WAE9EM,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,WAAW,UAAUC,KAAK,YAAYE,QAAQ,gBAC1DD,QAAS,kBAAMZ,EAAYF,SCHzBgB,EAAsBC,IAAgBC,KACxCC,EAAYD,IAAYE,gBAAgBC,KACxCC,EAAU,CAACC,iBAAkB,MA8B3BC,EAAmB,SAACC,EAAOtC,EAAOC,EAAKsC,GAC3C,MAAO,CAAEC,MAAO,CAAEC,gBAAiBH,EAAMI,SAG5BC,EAhCE,SAAA1B,KAAEF,YAAF,IAAe6B,EAAf3B,EAAe2B,OAAQC,EAAvB5B,EAAuB4B,cAAeC,EAAtC7B,EAAsC6B,UAAwBC,GAA9D9B,EAAiD+B,YAAjD/B,EAA8D8B,kBAA9D,OACf7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAMC,QAAS,GAAIC,KAAK,KACtBjC,EAAAC,EAAAC,cAACS,EAAD,CACEuB,YAAU,EACVpB,UAAWA,EACXG,QAASA,EACTS,OAAQA,EACRS,YAAaP,EACbQ,WAAS,EACTC,KAAM,GACNC,UAAW,EACXC,cAAeX,EACfY,aAAcb,EACdc,MAAO,CAAC,OACRC,cAAeb,EACfc,YAAa,IAAI7C,KACjB8C,YAAa/B,IAAYgC,MAAMC,IAC/BC,WAAY,CAACC,QAAUC,GACvBC,gBAAiB/B,OCYR7B,cAxCS,SAAAC,GAEtB,IAAI4D,EAAc,GAElB,IAAK,IAAIC,KAAO7D,EAAMmC,OAAO,CAC3B,IAAI2B,EAAgB9D,EAAM+D,SAAS/D,EAAMmC,OAAO0B,GAAKvE,SACjDwE,EACFF,EAAYI,KAAZC,OAAAC,EAAA,EAAAD,CAAA,GACMjE,EAAMmC,OAAO0B,GADnB,CAEIxE,GAAIwE,EACJM,MAAOL,EAAcK,MACrBlC,MAAO6B,EAAc7B,SAEzB2B,EAAYI,KAAZC,OAAAC,EAAA,EAAAD,CAAA,GAAqBjE,EAAMmC,OAAO0B,GAAlC,CAAwCxE,GAAIwE,KAGhD,MAAQ,CACN1B,OAAQyB,IAIe,SAAAvD,GAAQ,MAAK,CACtC+B,cAAe,SAAAP,GH2BY,IAACtC,EAAOC,EG1BjCa,GH0B0Bd,EG1BHsC,EAAMtC,MH0BIC,EG1BGqC,EAAMrC,IH0BA,CAC5CC,KAAM,aACN2E,UAAW,mBACXC,WAAY,CACVhF,GAAIiF,eACJ/E,QACAC,WG7BF6C,UAAW,SAAA7B,GAA2B,IAAxBqB,EAAwBrB,EAAxBqB,MAAOtC,EAAiBiB,EAAjBjB,MAAOC,EAAUgB,EAAVhB,IAC1Ba,EAASjB,EAAYyC,EAAMxC,GAAIwC,EAAMvC,QAASC,EAAOC,KAGvD8C,iBAAkB,SAAAiC,GAAU,IAARlF,EAAQkF,EAARlF,GAClBgB,EH4B4B,SAAChB,GAAD,MAAS,CACvCI,KAAM,aACN2E,UAAW,eACXC,WAAY,CACVhF,GAAIA,IGhCKiD,CAAiBjD,KAG5BiB,YAAa,SAACX,GACZU,EAASX,EAAQC,EAAU,IAAIY,UAKpBR,CAGbmC,oFChDWsC,EAAS,CACpBC,QAAS,UACTC,KAAM,UACNC,IAAK,UACLC,OAAQ,UACRC,OAAQ,UACRC,MAAO,UACPC,KAAK,UACLC,OAAQ,WAGGC,EAAY,SAACC,EAASC,GACjC,OACED,EAAQE,YAAcD,EAAQC,WAC3BF,EAAQG,aAAeF,EAAQE,YAC/BH,EAAQI,gBAAkBH,EAAQG,eC0D1BC,EAlEC,SAAA/E,GAAA,IAAElB,EAAFkB,EAAElB,QAASkG,EAAXhF,EAAWgF,WAAYC,EAAvBjF,EAAuBiF,kBAAmBC,EAA1ClF,EAA0CkF,cAAeC,EAAzDnF,EAAyDmF,UAAwBC,GAAjFpF,EAAoEqF,YAApErF,EAAiFoF,aAAjF,OACdnF,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAMC,QAAS,IAEbhC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASiF,KAAM,IAAK7D,MAAO3C,EAAQ2C,OAChC3C,EAAQ6E,OAEX1D,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAWC,aAAc,IACvBvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KAAST,GADX,UAIA/E,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAWpF,MAAO,IAAKqF,OAAQ,GAAIC,KAAMT,GACvClF,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAKC,QAAQ,QACRpF,QAAS,kBAAMqF,MAAM,SAEzBZ,EAAUa,IAAI,SAACC,EAAOC,GAAR,OACbjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMC,OAAO,UACPC,KAAMvH,EAAQ2C,MACd4B,IAAG,QAAAiD,OAAUJ,SAMvBjG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACE7G,MAAM,sBACN8G,YAAa1H,EAAQ6E,MACrB8C,UAAW,GACXC,SAAU,SAAAC,GAAC,OAAI1B,EAAkBnG,EAAQD,GAAI8H,EAAEC,OAAOC,UAGxD5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAEEpH,MAAM,QACNgH,SAAU,SAAAC,GAAC,OACTvB,EAAYtG,EAAQD,GAAI8H,EAAEC,OAAOC,QAEnCA,MAAO/H,EAAQ2C,OAEdgC,OAAOsD,KAAK/C,GAAQgC,IAAI,SAAAgB,GAAC,OACxB/G,EAAAC,EAAAC,cAAA,UAAQkD,IAAK2D,EACLH,MAAO7C,EAAOgD,IAGnBA,MAMP/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CACEzG,WAAY,UACZ0G,GAAIC,IACJ7H,GAAI,IACJ8H,YAAa,GACbC,WAAW,QACXC,OAAO,SACP5G,QAAW,kBAAIwE,EAAcpG,EAAQD,MAPvC,oBCQWU,cA3DS,SAACC,EAAOC,GAE9B,IAAI8H,EAAU9H,EAAS+H,MAAMC,OAAOC,WAEhCtE,EAAc,GAElB,IAAK,IAAIC,KAAO7D,EAAMmC,OAChBnC,EAAMmC,OAAO0B,GAAKvE,UAAYyI,GAChCnE,EAAYI,KAAZC,OAAAC,EAAA,EAAAD,CAAA,GAAqBjE,EAAMmC,OAAO0B,GAAlC,CAAwCxE,GAAIwE,KAWhD,IARA,IAAIsE,EAAmBvE,EAAY4C,IAAI,SAAA3E,GAAK,OAAAoC,OAAAC,EAAA,EAAAD,CAAA,GACvCpC,EADuC,CAE1CuG,SAAUC,KAAKC,OAAOzG,EAAMrC,IAAMqC,EAAMtC,OAAO,UAI7CoG,EAAY,GAjB2B4C,EAAA,SAmBnCC,GACN,IACIpI,EAAO,IAAIG,KAAKA,KAAKkI,MADN,MAC6BD,GAG5CE,EAFcP,EAAiBQ,OAAO,SAAC9G,GAAD,OAAWoD,EAAU7E,EAAMyB,EAAMtC,SAEnDqJ,OAAO,SAACC,EAAKrB,GAAN,OAC7BqB,EAAMrB,EAAEY,UACR,GAEFzC,EAAU3B,KAAK,CACb5D,KAAMA,EACNsI,MAAOA,KAXHF,EAAE,EAAGA,EAAE,GAAIA,IAAID,EAAfC,GAeR7C,EAAYA,EAAUmD,UACtB,IAAIJ,EAAQP,EAAiBS,OAAO,SAACC,EAAKrB,GAAN,OAAYqB,EAAMrB,EAAEY,UAAU,GAE9DvC,EAAc,GAElB,IAAK,IAAIhC,KAAO7D,EAAM+D,SAChBF,IAAQkE,GACVlC,EAAY7B,KAAZC,OAAAC,EAAA,EAAAD,CAAA,GAAqBjE,EAAM+D,SAASF,GAApC,CAA0CxE,GAAIwE,KAIlD,MAAQ,CACNvE,QAASU,EAAM+D,SAASgE,GACxBvC,WAAYkD,EACZ/C,UAAWA,EACXE,YAAaA,IAIU,SAAAxF,GAAQ,MAAK,CACtCuF,YAAa,SAACvG,EAAI4C,GAAL,OAAe5B,ENxBH,SAACf,EAAS2C,GAAV,MAAqB,CAC9CxC,KAAM,eACNJ,GAAIC,EACJ2C,MAAOA,GMqB8B2D,CAAYvG,EAAI4C,KACrDwD,kBAAmB,SAACpG,EAAI0J,GAAL,OAAc1I,ENnBF,SAACf,EAASyJ,GAAV,MAAoB,CACnDtJ,KAAM,cACNJ,GAAIC,EACJ6E,MAAO4E,GMgBmCtD,CAAkBpG,EAAI0J,KAChErD,cAAe,SAACrG,GAAD,OAAQgB,ENdkB,CACzCZ,KAAM,iBACNJ,GMY8CA,OAGjCU,CAGbwF,GCpDayD,EATF,kBACXvI,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACsI,EAAA,EAAD,KACExI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC7I,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAOE,KAAK,uBAAuBC,UAAWE,kCC8ErCxJ,cAhBS,SAACC,GAEvB,IAAIwJ,EAAgB,GACpB,IAAK,IAAI3F,KAAO7D,EAAM+D,SACpByF,EAAcxF,KAAKhE,EAAM+D,SAASF,IAGpC,MAAQ,CACNgC,YAxCyB,SAAC9B,GAE5B,IAAI0F,EAAc,GACdC,EAAc,GAElB,IAAK,IAAI7F,KAAOE,EAAU,CACxB,IAAIzE,EAAUyE,EAASF,GAEpBvE,EAAQqK,cACTD,EAAY1F,KAAKH,GACjB6F,EAAcA,EAAY5C,OAAOxH,EAAQqK,cAG3CF,EAAYzF,KAAKH,GAGnB,IAGI+F,EAHaH,EAAYd,OAAQ,SAAAnB,GAAC,OAAIkC,EAAYG,QAAQrC,GAAK,IACvCV,OAAO4C,GAEXlD,IAAI,SAAA3C,GAC1B,IAAInD,EAAIqD,EAASF,GAGjB,OAFAnD,EAAErB,GAAKwE,EAEAnD,IAKT,OAFAoJ,QAAQC,IAAIH,GAELA,EAYQI,CAAqBhK,EAAM+D,YAIjB,SAAC1D,GAAD,MAAe,CACxC4J,gBAAiB,kBAAM5J,ERba,CACpCZ,KAAM,aACN2E,UAAW,cACXC,WAAY,QQaCtE,CAlFC,SAAAS,GAAA,IAAEqF,EAAFrF,EAAEqF,YAAaoE,EAAfzJ,EAAeyJ,gBAAf,OACdxJ,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAM0H,WAAW,QAAQC,SAAS,QAAQrJ,MAAO,IAC7CqF,OAAO,QACT1F,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAetJ,MAAO,IAAK2B,QAAS,GAAIuD,aAAc,IACpDvF,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAYxG,IAAI,QAAQ6D,GAAIC,IAAM7H,GAAI,IAAKT,GAAG,QAAQ2G,aAAc,IAClEvF,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAMrJ,KAAK,OAAO2G,YAAa,GAAI5B,cAAe,IADpD,SAKCH,EAAYW,IAAI,SAAC+D,EAAK7D,GAAN,OACfjG,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACExG,IAAK6C,EACLgB,GAAIC,IACJ7H,GAAI,YAAcyK,EAAIlL,GACtBA,GAAIkL,EAAIlL,GACR4H,UAAWsD,EAAIZ,YAAc,GAAK,GAElClJ,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAMrJ,KAAMsJ,EAAIZ,YAAc,MAAQ,gBAChC7D,KAAMyE,EAAIZ,YAAc,GAAK,GAC7B/B,YAAa,EAAG5B,cAAe,IACpCuE,EAAIpG,SAIT1D,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAYpD,UAAW,GAAI/F,QAAS,kBAAI+I,MACtCxJ,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAMrJ,KAAK,MAAM2G,YAAa,GAAI5B,cAAe,IADnD,qCCCSjG,cACb,SAACC,EAAOC,GAEN,IAAIuJ,EAAgB,GACpB,IAAK,IAAI3F,KAAO7D,EAAM+D,SACpByF,EAAcxF,KAAdC,OAAAC,EAAA,EAAAD,CAAA,GAAuBjE,EAAM+D,SAASF,GAAtC,CAA4CxE,GAAIwE,KAGlD,MAAQ,CACNxE,GAAIY,EAASZ,GACbE,MAAOU,EAASV,MAChBC,IAAKS,EAAST,IACdqG,YAAa2D,IAGjB,SAACnJ,GAAD,MAAe,CACbmK,UAAW,kBAAMnK,EAAS,CAACZ,KAAM,gBACjCgL,SAAU,SAACpL,EAAIC,EAASC,EAAOC,GAArB,OAA6Ba,ET9CnB,SAAChB,EAAIC,EAASC,EAAOC,GAArB,MAA8B,CACpDC,KAAM,YACNJ,KACAC,UACAC,QACAC,OSyCkDiL,CAASpL,EAAIC,EAASC,EAAOC,OAjBlEO,CAzBO,SAAAS,GAA0D,IAAvDnB,EAAuDmB,EAAvDnB,GAAIE,EAAmDiB,EAAnDjB,MAAOC,EAA4CgB,EAA5ChB,IAAKqG,EAAuCrF,EAAvCqF,YAAa2E,EAA0BhK,EAA1BgK,UAAWC,EAAejK,EAAfiK,SAE/D,OACEhK,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CACEC,SAAS,EACTC,gBAAkB,kBAAMJ,MAEtB/J,EAAAC,EAAAC,cAACkK,EAAA,EAAD,KACEpK,EAAAC,EAAAC,cAACkK,EAAA,EAAMC,KAAP,CAAY3E,OAAQ,KACjBN,EAAYW,IAAI,SAAAlH,GAAO,OACtBmB,EAAAC,EAAAC,cAACkK,EAAA,EAAME,IAAP,CAAWlH,IAAKvE,EAAQD,GAAI2L,cAAY,EAC7BC,SAAU,WACTR,EAASpL,EAAIC,EAAQD,GAAIE,EAAOC,GAChCgL,MAEV/J,EAAAC,EAAAC,cAACkK,EAAA,EAAMK,SAAP,KAAiB5L,EAAQ6E,wBC4B1BpE,cACb,SAACC,EAAOC,GACN,IAAIuJ,EAAgB,GACpB,IAAK,IAAI3F,KAAO7D,EAAM+D,SACpByF,EAAcxF,KAAdC,OAAAC,EAAA,EAAAD,CAAA,GAAuBjE,EAAM+D,SAASF,GAAtC,CAA4CxE,GAAIwE,KAGlD,MAAQ,CACRxE,GAAIY,EAASZ,GACb8L,cAAenL,EAAMmC,OAAOlC,EAASZ,IACrCwG,YAAa2D,IAGf,SAACnJ,GAAD,MAAe,CACbmK,UAAW,kBAAMnK,EAAS,CAACZ,KAAM,gBACjCL,YAAa,SAACC,EAAIC,EAASC,EAAOC,GAArB,OAA6Ba,EAASjB,EAAYC,EAAIC,EAASC,EAAOC,KACnF4L,YAAa,SAAA/L,GAAE,OAAIgB,EV/CI,SAAAhB,GAAE,MAAK,CAChCI,KAAM,eACNJ,MU6C8B+L,CAAY/L,OAhB7BU,CA3CU,SAAAS,GAA4E,IAAzEnB,EAAyEmB,EAAzEnB,GAAI8L,EAAqE3K,EAArE2K,cAAetF,EAAsDrF,EAAtDqF,YAAazG,EAAyCoB,EAAzCpB,YAAaoL,EAA4BhK,EAA5BgK,UAAWY,EAAiB5K,EAAjB4K,YAElF,IAAID,EACF,OACE1K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAKnB,IAAIyK,EAAQF,EAAc7L,QAE1B,OACEmB,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CACEC,QAA2B,OAAlBQ,EACThH,MAAM,OAENyG,gBAAiB,WACfxL,EAAYC,EAAIgM,EAAOF,EAAc5L,MAAO4L,EAAc3L,KAC1DgL,MAGJ/J,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEpE,SAAU,SAAAC,GAAOkE,EAAQlE,EAAEC,OAAOC,OAClCkE,aAAcF,GAEbxF,EAAYW,IAAI,SAAAgF,GAAC,OAChB/K,EAAAC,EAAAC,cAAA,UAAQkD,IAAK2H,EAAEnM,GAAIgI,MAAOmE,EAAEnM,IAAKmM,EAAErH,UAIvC1D,EAAAC,EAAAC,cAAA,SAAItB,GAEJoB,EAAAC,EAAAC,cAACE,EAAA,EAAD,gBAEAJ,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAQK,OAAO,SAAS9G,WAAW,UAAUE,QAAS,WACpDkK,EAAY/L,GACZmL,MAFF,uBCjCEiB,GAAmB,CACvBC,iBAAoBC,EACpBC,aAAgBC,EAChBC,YCqBa/L,YACb,SAACC,EAAOC,GAAR,MAAqB,IAErB,SAACI,GAAD,MAAe,CACb0L,WAAY,SAACzM,GAAD,OAAae,GZNF8D,EYMsB7E,EZNX,CACpCG,KAAM,cACNJ,GAAIiF,eACJH,WAHwB,IAACA,GYOvBqG,UAAW,kBAAMnK,EAAS,CAACZ,KAAM,kBALtBM,CAzBS,SAAAS,GAA+B,IAA5BuL,EAA4BvL,EAA5BuL,WAAYvB,EAAgBhK,EAAhBgK,UAEjCa,EAAQ,GAGZ,OACE5K,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CACEC,SAAS,EACTxG,MAAM,cACNyG,gBAAiB,WACfd,QAAQC,IAAIsB,EAPA,IAQE,KAAVA,GAAcU,EAAWV,EARjB,IASZb,MAGF/J,EAAAC,EAAAC,cAACqL,GAAA,EAAD,CACEjD,KAAK,kBACL/B,YAAY,4BACZE,SAAU,SAAAC,GAAOkE,EAAQlE,EAAEC,OAAOC,aDF3BtH,eACb,SAAAC,GAAK,OAAIA,EAAMiM,OADFlM,CATG,SAAAS,GAA+B,IAA5B4D,EAA4B5D,EAA5B4D,UAAWC,EAAiB7D,EAAjB6D,WAC9B,IAAKD,EACH,OAAO3D,EAAAC,EAAAC,cAAA,aAGT,IAAMuL,EAAgBT,GAAiBrH,GACvC,OAAO3D,EAAAC,EAAAC,cAACuL,EAAkB7H,KEDb8H,WAVH,kBACV1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAM4J,QAAQ,QACZ3L,EAAAC,EAAAC,cAAC0L,EAAD,MACA5L,EAAAC,EAAAC,cAAC2L,EAAD,MACA7L,EAAAC,EAAAC,cAAC4L,GAAD,mBCVFC,GAAc,CAChBC,EAAI,CACFtI,MAAO,GACPuI,QAAQ,EACRnN,MAAO,IAAIgB,KACXf,IAAK,IAAIe,OAgDE4B,GA5CA,WAAkC,IAAjCnC,EAAiC2M,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBH,GAAaM,EAAYH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOrN,MACb,IAAK,YACL,IAAK,eACH,OAAOwE,OAAAC,EAAA,EAAAD,CAAA,GAAMjE,EAAbiE,OAAA8I,GAAA,EAAA9I,CAAA,GACG6I,EAAOzN,GAAK,CACXC,QAASwN,EAAOxN,QAChBC,MAAOuN,EAAOvN,MACdC,IAAKsN,EAAOtN,OAGlB,IAAK,WACH,OAAOyE,OAAOsD,KAAKvH,GAAO4I,OAAO,SAACC,EAAKmE,GACrC,IAKmCC,EAL/BC,EAAY,IAAI3M,KAAKP,EAAMgN,GAAKzN,OAChC4N,EAAU,IAAI5M,KAAKP,EAAMgN,GAAKxN,KAC9B4N,EAAW,IAAI7M,KAAKuM,EAAOjN,MAC3BwN,EAAS,IAAI9M,KAAKuM,EAAOhN,IAE7B,OAAImF,EAAUiI,EAAUE,GACfnJ,OAAAC,EAAA,EAAAD,CAAA,GAAK4E,GAAZoE,EAAA,GAAAhJ,OAAA8I,GAAA,EAAA9I,CAAAgJ,EACGD,EAAKhN,EAAMgN,IADd/I,OAAA8I,GAAA,EAAA9I,CAAAgJ,EAEG3I,eAFHL,OAAAC,EAAA,EAAAD,CAAA,GAEcjE,EAAMgN,GAFpB,CAGIzN,MAAO,IAAIgB,KAAK8M,EAAO/H,cACP+H,EAAOhI,WACPgI,EAAOjI,UACP8H,EAAUI,YAC1B9N,IAAK,IAAIe,KAAK8M,EAAO/H,cACP+H,EAAOhI,WACPgI,EAAOjI,UACP+H,EAAQG,eAV1BL,IAcKhJ,OAAAC,EAAA,EAAAD,CAAA,GAAI4E,EAAX5E,OAAA8I,GAAA,EAAA9I,CAAA,GAAiB+I,EAAKhN,EAAMgN,MAC3B,IACL,IAAK,eACH,OAAO/I,OAAOsD,KAAKvH,GAAO4I,OAAO,SAACC,EAAKmE,GAAN,OAC/BA,IAAQF,EAAOzN,GAAf4E,OAAAC,EAAA,EAAAD,CAAA,GAAwB4E,EAAxB5E,OAAA8I,GAAA,EAAA9I,CAAA,GAA8B+I,EAAKhN,EAAMgN,KAAQnE,GACjD,IACJ,QACE,OAAO7I,ICrBE+D,GA/BE,WAAyB,IAAxB/D,EAAwB2M,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhB,GAAIG,EAAYH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxC,OAAOC,EAAOrN,MACZ,IAAK,cACH,OAAOwE,OAAAC,EAAA,EAAAD,CAAA,GACFjE,EADLiE,OAAA8I,GAAA,EAAA9I,CAAA,GAEG6I,EAAOzN,GAAK,CACX8E,MAAO2I,EAAO3I,MACdlC,MAAO,aAGb,IAAK,eACH,OAAOgC,OAAAC,EAAA,EAAAD,CAAA,GAAIjE,EAAXiE,OAAA8I,GAAA,EAAA9I,CAAA,GACG6I,EAAOzN,GADV4E,OAAAC,EAAA,EAAAD,CAAA,GACmBjE,EAAM8M,EAAOzN,IADhC,CAEI4C,MAAO6K,EAAO7K,UAGpB,IAAK,cACH,OAAOgC,OAAAC,EAAA,EAAAD,CAAA,GAAIjE,EAAXiE,OAAA8I,GAAA,EAAA9I,CAAA,GACG6I,EAAOzN,GADV4E,OAAAC,EAAA,EAAAD,CAAA,GACmBjE,EAAM8M,EAAOzN,IADhC,CAEI8E,MAAO2I,EAAO3I,UAGpB,IAAK,iBACH,OAAOF,OAAOsD,KAAKvH,GAAO4I,OAAO,SAACC,EAAKmE,GAAN,OAC/BA,IAAQF,EAAOzN,GAAf4E,OAAAC,EAAA,EAAAD,CAAA,GAAwB4E,EAAxB5E,OAAA8I,GAAA,EAAA9I,CAAA,GAA8B+I,EAAKhN,EAAMgN,KAAQnE,GACjD,IACJ,QACE,OAAO7I,IC3BPuN,GAAe,CACnBC,UAAW,KACXC,WAAY,IAiBCxB,GAdD,WAAkC,IAAjCjM,EAAiC2M,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBY,GAAcT,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQC,EAAOrN,MACb,IAAK,aACH,MAAO,CACL2E,UAAW0I,EAAO1I,UAClBC,WAAYyI,EAAOzI,YAEvB,IAAK,aACH,OAAOkJ,GACT,QACE,OAAOvN,ICVE0N,eAAgB,CAC7BvL,UACA4B,YACAkI,WCKI0B,WCbmB,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACF,OAEF,IAAI5N,EAAS+N,KAAKC,MAAMJ,GASxB,OAPA5N,EAAMmC,OAAS8B,OAAOsD,KAAKvH,EAAMmC,QAAQyG,OAAO,SAACC,EAAKmE,GACrD,OAAO/I,OAAAC,EAAA,EAAAD,CAAA,GAAM4E,EAAb5E,OAAA8I,GAAA,EAAA9I,CAAA,GAAoB+I,EAApB/I,OAAAC,EAAA,EAAAD,CAAA,GAA8BjE,EAAMmC,OAAO6K,GAA3C,CACkBzN,MAAO,IAAIgB,KAAKP,EAAMmC,OAAO6K,GAAKzN,OAClCC,IAAK,IAAIe,KAAKP,EAAMmC,OAAO6K,GAAKxN,UAEhD,IAEIQ,EACP,MAAOiO,GACP,QDJmBC,IAEjBC,GAAQC,YAAYC,GACxBV,GAEAW,OAAOC,8BAAgCD,OAAOC,gCAGhDJ,GAAMK,UAAU,YCAS,SAACxO,GACxB,IACE,IAAMyO,EAAgBV,KAAKW,UAAU1O,GACrC6N,aAAac,QAAQ,QAASF,GAC9B,MAAOR,KDHTW,CAAUT,GAAMU,cAIlBC,iBACErO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAUZ,MAAOA,IACf1N,EAAAC,EAAAC,cAACqO,EAAA,EAAD,KACEvO,EAAAC,EAAAC,cAACsO,GAAD,QAGJC,SAASC,eAAe","file":"static/js/main.79c7b90b.chunk.js","sourcesContent":["import { v4 } from 'node-uuid'\n\nexport const addEvent = (id, project, start, end) => ({\n  type: 'ADD_EVENT',\n  id,\n  project,\n  start,\n  end\n})\n\nexport const updateEvent = (id, project, start, end) => ({ //move and resize\n  type: 'UPDATE_EVENT',\n  id,\n  project,\n  start,\n  end\n})\n\nexport const deleteEvent = id => ({\n  type: 'DELETE_EVENT',\n  id\n})\n\nexport const copyDay = (fromDate, toDate) => ({\n  type: 'COPY_DAY',\n  from: fromDate,\n  to: toDate\n})\n\nexport const addProject = (title) => ({\n  type: 'ADD_PROJECT',\n  id: v4(),\n  title\n})\n\nexport const updateColor = (project, color) => ({\n  type: 'UPDATE_COLOR',\n  id: project,\n  color: color\n})\n\nexport const updateProjectName = (project, name) => ({\n  type: 'UPDATE_NAME',\n  id: project,\n  title: name\n})\n\nexport const deleteProject = (project) => ({\n  type: 'DELETE_PROJECT',\n  id: project\n})\n\n\n\nexport const newEventModal = (start, end) => ({\n  type: 'SHOW_MODAL',\n  modalType: 'NEW_EVENT_SELECT',\n  modalProps: {\n    id: v4(),\n    start,\n    end\n  }\n})\n\nexport const selectEventModal = (id) => ({\n  type: 'SHOW_MODAL',\n  modalType: 'SELECT_EVENT',\n  modalProps: {\n    id: id\n  }\n})\n\nexport const newProjectModal = () => ({\n  type: 'SHOW_MODAL',\n  modalType: 'NEW_PROJECT',\n  modalProps: {\n  }\n})","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Pane, Heading, IconButton, Button } from 'evergreen-ui'\nimport { copyDay } from '../actions'\n\nconst CustomToolbar = ({label, onNavigate, date, copyToToday}) => (\n  <div className='rbc-toolbar'>\n    <Heading width={220}>{label}</Heading>\n    \n    <IconButton appearance=\"minimal\" icon=\"caret-left\" onClick={() => onNavigate('PREV')}/>\n    <IconButton appearance=\"minimal\" icon=\"caret-right\" onClick={() => onNavigate('NEXT')}/>\n  \n    <IconButton appearance=\"minimal\" icon=\"duplicate\" tooltip=\"copy to today\"\n    onClick={() => copyToToday(date)}/>\n\n  </div>\n)\n\nexport default connect(\n  (state, ownProps) => ({\n    label: ownProps.label,\n    onNavigate: ownProps.onNavigate,\n    date: ownProps.date,\n  }),\n  dispatch => ({\n    copyToToday: (date) => dispatch(copyDay(date, new Date()))\n  })\n)(CustomToolbar)","import React from 'react'\nimport BigCalendar from 'react-big-calendar'\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { Pane, Heading, IconButton, Button } from 'evergreen-ui'\n\nimport CustomToolbar from '../containers/CustomToolbar'\n\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar)\nlet localizer = BigCalendar.momentLocalizer(moment)\nlet formats = {timeGutterFormat: 'HH'}\n\nconst Calendar = ({copyToToday, events, newEventModal, moveEvent, selectEvent, selectEventModal}) => (\n  <div>\n  <Pane padding={16} flex=\"1\">\n    <DragAndDropCalendar\n      selectable\n      localizer={localizer}\n      formats={formats}\n      events={events}\n      onEventDrop={moveEvent}\n      resizable\n      step={60}\n      timeslots={1}\n      onEventResize={moveEvent}\n      onSelectSlot={newEventModal}\n      views={['day']}\n      onSelectEvent={selectEventModal}\n      defaultDate={new Date()}\n      defaultView={BigCalendar.Views.DAY}\n      components={{toolbar : CustomToolbar}}\n      eventPropGetter={eventStyleGetter}\n    />\n  </Pane>\n  \n  </div>\n)\n\n\n\nconst eventStyleGetter = (event, start, end, isSelected) => {\n  return { style: { backgroundColor: event.color }}\n}\n\nexport default Calendar","import { connect } from 'react-redux'\nimport { newEventModal, updateEvent, selectEventModal, copyDay } from '../actions'\nimport Calendar from '../components/Calendar'\n\n\nconst mapStateToProps = state => {\n\n  let eventsArray = []\n\n  for( let key in state.events){\n    let projectParent = state.projects[state.events[key].project]\n    if (projectParent){ \n      eventsArray.push(\n        {...state.events[key], \n          id: key,\n          title: projectParent.title,\n          color: projectParent.color})\n    } else {\n      eventsArray.push({...state.events[key], id: key })\n    }\n  }\n  return ({\n    events: eventsArray\n  })\n}\n\nconst mapDispatchToProps = dispatch => ({\n  newEventModal: event => {\n    dispatch(newEventModal(event.start, event.end))\n  },\n\n  moveEvent: ({ event, start, end }) => {\n    dispatch(updateEvent(event.id, event.project, start, end))\n  },\n\n  selectEventModal: ({id}) => {\n    dispatch(selectEventModal(id))\n  },\n\n  copyToToday: (fromDate) => {\n    dispatch(copyDay(fromDate, new Date()))\n  }\n})\n\n\nexport default connect(\n  mapStateToProps, \n  mapDispatchToProps\n)(Calendar)","export const Colors = {\n  NEUTRAL: \"#425A70\",\n  BLUE: \"#1070CA\",\n  RED: \"#EC4C47\",\n  ORANGE: \"#D9822B\",\n  YELLOW: \"#F7D154\",\n  GREEN: \"#47B881\",\n  TEAL:\"#14B5D0\",\n  PURPLE: \"#735DD0\",\n}\n\nexport const isSameDay = (dateOne, dateTwo) => {\n  return ( \n    dateOne.getDate() === dateTwo.getDate()\n    && dateOne.getMonth() === dateTwo.getMonth()\n    && dateOne.getFullYear() === dateTwo.getFullYear()\n  )\n}\n","import React from 'react'\nimport { Heading, Paragraph, Pane, Strong, SelectField, Button, TextInputField } from 'evergreen-ui'\nimport { BarChart, Bar, Cell } from 'recharts'\nimport { Link } from 'react-router-dom'\nimport { Colors } from '../constants'\n\n\nconst Project = ({project, totalHours, updateProjectName, deleteProject, daysChart, projectList, updateColor}) => (\n  <Pane padding={20}>  \n    \n    <Heading size={900} color={project.color}>\n      {project.title}\n    </Heading>\n    <Paragraph marginBottom={20}>\n      <Strong>{totalHours}</Strong> hours\n    </Paragraph>\n    \n    <BarChart  width={300} height={80} data={daysChart}>\n      <Bar dataKey='hours' \n           onClick={() => alert(\"Hi!\")}\n      >\n      {daysChart.map((entry, index) => (\n        <Cell cursor=\"pointer\" \n              fill={project.color} \n              key={`cell-${index}`}\n        />\n      ))}\n      </Bar>\n    </BarChart>\n\n    <TextInputField\n      label=\"Change Project Name\"\n      placeholder={project.title}\n      marginTop={20}\n      onChange={e => updateProjectName(project.id, e.target.value)}\n    />\n\n    <SelectField\n      \n      label=\"Color\"\n      onChange={e => \n        updateColor(project.id, e.target.value)\n      }\n      value={project.color}\n    >\n      {Object.keys(Colors).map(x => \n        <option key={x} \n                value={Colors[x]}\n        >\n\n          {x}\n        </option>\n       )}\n    \n    </SelectField>\n\n    <Button \n      appearance={\"minimal\"}\n      is={Link}\n      to={\"/\"}\n      marginRight={12} \n      iconBefore=\"trash\" \n      intent=\"danger\"\n      onClick = {()=>deleteProject(project.id)}\n    >\n      Delete Project\n    </Button>\n\n\n  </Pane>\n)\n\n\nexport default Project","import { connect } from 'react-redux'\nimport Project from '../components/Project'\nimport { updateColor, updateProjectName, deleteProject } from '../actions'\nimport { isSameDay } from '../constants'\n\nconst mapStateToProps = (state, ownProps) => {\n\n  let propKey = ownProps.match.params.projectKey\n\n  let eventsArray = []\n\n  for( let key in state.events){\n    if( state.events[key].project === propKey )\n      eventsArray.push({...state.events[key], id: key})\n  }\n\n  let eventsWDurations = eventsArray.map(event => ({\n    ...event,\n    duration: Math.round((event.end - event.start)/3600000)\n  }))\n\n  \n  let daysChart = []\n\n  for(let i=0; i<30; i++){\n    let dayInSeconds = 86400000\n    let date = new Date(Date.now() - dayInSeconds * i)\n    let eventsOnDay = eventsWDurations.filter((event) => isSameDay(date, event.start))\n   \n    let hours = eventsOnDay.reduce((acc, x) => \n      acc + x.duration\n    , 0)\n\n    daysChart.push({\n      date: date,\n      hours: hours\n    })\n  }\n  \n  daysChart = daysChart.reverse()\n  let hours = eventsWDurations.reduce((acc, x) => acc + x.duration, 0)\n\n  let projectList = []\n\n  for (let key in state.projects){\n    if (key !== propKey){\n      projectList.push({...state.projects[key], id: key})\n    }\n  }\n\n  return ({\n    project: state.projects[propKey], \n    totalHours: hours,\n    daysChart: daysChart,\n    projectList: projectList\n  })\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateColor: (id, color) => dispatch(updateColor(id, color)),\n  updateProjectName: (id, name) => dispatch(updateProjectName(id, name)),\n  deleteProject: (id) => dispatch(deleteProject(id)),\n})\n\nexport default connect(\n  mapStateToProps, \n  mapDispatchToProps,\n)(Project)","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport VisibleCalendar from '../containers/VisibleCalendar'\nimport VisibleProject from '../containers/VisibleProject'\n\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={VisibleCalendar}/>\n      <Route path='/project/:projectKey' component={VisibleProject} />\n    </Switch>\n  </main>\n)\n\nexport default Main","import React from 'react'\nimport { TabNavigation, SidebarTab, Pane, Icon } from 'evergreen-ui'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { newProjectModal } from '../actions'\n\nconst Sidebar = ({projectList, newProjectModal}) => (\n  <Pane background=\"tint2\" position=\"fixed\" width={200} \n      height=\"100%\">\n    <TabNavigation width={200} padding={20} marginBottom={16}>\n      <SidebarTab key='Today' is={Link} to={\"/\"} id='Today' marginBottom={30}>\n        <Icon icon=\"star\" marginRight={10} marginBottom={-3} />\n        Today\n      </SidebarTab>\n      \n      {projectList.map((tab, index) => (\n        <SidebarTab\n          key={index}\n          is={Link}\n          to={\"/project/\" + tab.id}\n          id={tab.id}\n          marginTop={tab.subProjects ? 20 : 0}\n        >\n          <Icon icon={tab.subProjects ? \"box\" : \"symbol-circle\"} \n                size={tab.subProjects ? 14 : 10} \n                marginRight={6} marginBottom={-1}/>\n          {tab.title}\n        </SidebarTab>\n      ))}\n\n      <SidebarTab marginTop={30} onClick={()=>newProjectModal()}>\n        <Icon icon=\"add\" marginRight={10} marginBottom={-3} /> \n        Add Project\n      </SidebarTab>\n    </TabNavigation>\n\n\n  </Pane>\n)\n\nconst projectListToDisplay = (projects) => {\n\n  let projectKeys = []\n  let collections = []\n\n  for( let key in projects ){\n    let project = projects[key]\n\n    if(project.subProjects) {\n      collections.push(key)\n      collections = collections.concat(project.subProjects)\n    } \n    \n    projectKeys.push(key)\n  } \n\n  let singleKeys = projectKeys.filter( x => collections.indexOf(x) < 0 )\n  let resultKeys = singleKeys.concat(collections)\n\n  let result = resultKeys.map(key => {\n    let a = projects[key]\n    a.id = key\n\n    return a\n  })\n\n  console.log(result)\n\n  return result\n\n}\n\nconst mapStateToProps = (state) => {\n\n  let projectsArray = []\n  for( let key in state.projects ){\n    projectsArray.push(state.projects[key])\n  }\n\n  return ({\n    projectList: projectListToDisplay(state.projects),\n  })\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  newProjectModal: () => dispatch(newProjectModal())\n})\n\nexport default connect(\n  mapStateToProps, \n  mapDispatchToProps,\n)(Sidebar)","import React from 'react';\nimport { connect } from 'react-redux'\nimport {  Table, Dialog } from 'evergreen-ui'\nimport { addEvent } from '../actions'\n\n\nconst EventNewModal = ({ id, start, end, projectList, hideModal, addEvent }) => {\n\n  return (\n    <Dialog \n      isShown={true}\n      onCloseComplete={ () => hideModal()}\n    >\n        <Table>\n          <Table.Body height={240}>\n            {projectList.map(project => (\n              <Table.Row key={project.id} isSelectable \n                         onSelect={() => {\n                          addEvent(id, project.id, start, end)\n                          hideModal()}}\n              >\n                <Table.TextCell>{project.title}</Table.TextCell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Dialog>\n\n  )\n}\n\nexport default connect(\n  (state, ownProps) => {\n\n    let projectsArray = []\n    for( let key in state.projects ){\n      projectsArray.push({...state.projects[key], id: key})\n    }\n\n    return ({\n      id: ownProps.id,\n      start: ownProps.start,\n      end: ownProps.end,\n      projectList: projectsArray\n    })\n  },\n  (dispatch) => ({\n    hideModal: () => dispatch({type: 'HIDE_MODAL'}),\n    addEvent: (id, project, start, end) => dispatch(addEvent(id, project, start, end))\n  })\n)(EventNewModal)","import React from 'react';\nimport { connect } from 'react-redux'\nimport { updateEvent, deleteEvent } from '../actions'\nimport { Heading, Button, Select, Dialog } from 'evergreen-ui'\n\n\nconst EventSelectModal = ({ id, selectedEvent, projectList, updateEvent, hideModal, deleteEvent}) => {\n\n  if(!selectedEvent){\n    return (\n      <div className=\"info\">\n      </div>\n    )\n  }\n\n  let input = selectedEvent.project\n\n  return (\n    <Dialog\n      isShown={selectedEvent !== null}\n      title=\"Edit\"\n      \n      onCloseComplete={() => {\n        updateEvent(id, input, selectedEvent.start, selectedEvent.end)\n        hideModal()\n      }}\n    >\n    <Select\n      onChange={e => { input = e.target.value}}\n      defaultValue={input}\n    >\n      {projectList.map(p => \n        <option key={p.id} value={p.id}>{p.title}</option>\n      )}\n    </Select>\n\n    <p>{id}</p>\n\n    <Heading>Actions</Heading>\n\n    <Button intent=\"danger\" appearance=\"primary\" onClick={() => {\n      deleteEvent(id)\n      hideModal()\n    }}>Delete</Button>\n\n    </Dialog>\n  )\n}\n\nexport default connect(\n  (state, ownProps) => {\n    let projectsArray = []\n    for( let key in state.projects ){\n      projectsArray.push({...state.projects[key], id: key})\n    }\n\n    return ({\n    id: ownProps.id,\n    selectedEvent: state.events[ownProps.id],\n    projectList: projectsArray\n    })\n  },\n  (dispatch) => ({\n    hideModal: () => dispatch({type: 'HIDE_MODAL'}),\n    updateEvent: (id, project, start, end) => dispatch(updateEvent(id, project, start, end)),\n    deleteEvent: id => dispatch(deleteEvent(id))\n  })\n)(EventSelectModal)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport EventNewModal from './EventNewModal'\nimport EventSelectModal from './EventSelectModal'\nimport ProjectNewModal from './ProjectNewModal'\n\nconst MODAL_COMPONENTS = {\n  'NEW_EVENT_SELECT': EventNewModal,\n  'SELECT_EVENT': EventSelectModal,\n  'NEW_PROJECT': ProjectNewModal\n}\n\nconst ModalRoot = ({ modalType, modalProps }) => {\n  if (!modalType) {\n    return <span />\n  }\n\n  const SpecificModal = MODAL_COMPONENTS[modalType]\n  return <SpecificModal {...modalProps} />\n}\n\nexport default connect(\n  state => state.modal\n)(ModalRoot)","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Dialog, TextInput } from 'evergreen-ui'\nimport { addProject } from '../actions'\n\n\nconst ProjectNewModal = ({ addProject, hideModal }) => {\n\n  let input = \"\"\n  let selectInput = \"\"\n\n  return (\n    <Dialog\n      isShown={true}\n      title=\"Add Project\"\n      onCloseComplete={() => {\n        console.log(input, selectInput)\n        if (input !== \"\") addProject(input, selectInput)\n        hideModal()\n      }}\n    >\n      <TextInput\n        name=\"text-input-name\"\n        placeholder=\"Text input placeholder...\"\n        onChange={e => { input = e.target.value }}\n      />  \n    </Dialog> \n\n  )\n}\n\nexport default connect(\n  (state, ownProps) =>({ \n  }),\n  (dispatch) => ({\n    addProject: (project) => dispatch(addProject(project)),\n    hideModal: () => dispatch({type: 'HIDE_MODAL'})\n  })\n)(ProjectNewModal)","import React from 'react';\nimport { Pane } from 'evergreen-ui'\nimport Main from './Main'\nimport Sidebar from '../containers/Sidebar'\nimport RootModal from '../containers/RootModal'\n\nimport './App.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <Pane display=\"flex\">\n      <Sidebar /> \n      <Main />\n      <RootModal />\n    </Pane>\n  </div>\n)\n\nexport default App;\n","import { v4 } from 'node-uuid'\nimport { isSameDay } from '../constants'\n\nlet initalState = {\n  0 : {\n    title: '', //Having this event load vs an empty array  \n    allDay: true,     //avoids the two click needed to do anything\n    start: new Date(),\n    end: new Date(),\n  },\n}\n\nconst events = (state = initalState, action ) => {\n  switch (action.type) {\n    case 'ADD_EVENT':\n    case 'UPDATE_EVENT':\n      return ({ ...state,\n        [action.id]: {\n          project: action.project,\n          start: action.start,\n          end: action.end\n        }\n      })\n    case 'COPY_DAY':\n      return Object.keys(state).reduce((acc, cur) =>{\n        let fromStart = new Date(state[cur].start)\n        let fromEnd = new Date(state[cur].end)\n        let fromCopy = new Date(action.from)\n        let toCopy = new Date(action.to)\n\n        if (isSameDay(fromStart,fromCopy)) { \n          return ({...acc, \n            [cur]:state[cur], \n            [v4()]: {...state[cur], \n              start: new Date(toCopy.getFullYear(), \n                              toCopy.getMonth(), \n                              toCopy.getDate(), \n                              fromStart.getHours()),\n              end: new Date(toCopy.getFullYear(), \n                            toCopy.getMonth(), \n                            toCopy.getDate(), \n                            fromEnd.getHours())\n            }\n          })\n        }  \n        return {...acc, [cur]:state[cur]}\n      }, {})\n    case 'DELETE_EVENT':\n      return Object.keys(state).reduce((acc, cur) => \n        cur !== action.id ? {...acc, [cur]:state[cur]} : acc\n      , {})\n    default:\n      return state\n  }\n}\n\nexport default events","const projects = (state = {}, action ) => {\n  switch(action.type){\n    case 'ADD_PROJECT':\n      return {\n        ...state,\n        [action.id]: {\n          title: action.title,\n          color: '#425A70'\n        }\n      }\n    case 'UPDATE_COLOR':\n      return {...state,\n        [action.id]: {...state[action.id],  \n          color: action.color\n        }\n      }\n    case 'UPDATE_NAME':\n      return {...state,\n        [action.id]: {...state[action.id],  \n          title: action.title\n        }\n      }\n    case 'DELETE_PROJECT':\n      return Object.keys(state).reduce((acc, cur) => \n        cur !== action.id ? {...acc, [cur]:state[cur]} : acc\n      , {})\n    default:\n      return state\n  }\n}\n\nexport default projects","const initialState = {\n  modelType: null,\n  modelProps: {}\n}\n\nconst modal = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SHOW_MODAL':\n      return {\n        modalType: action.modalType,\n        modalProps: action.modalProps\n      }\n    case 'HIDE_MODAL':\n      return initialState\n    default:\n      return state\n  }\n}\n\nexport default modal","import { combineReducers } from 'redux'\nimport events from './events'\nimport projects from './projects'\nimport modal from './modal'\n\nexport default combineReducers({\n  events,\n  projects,\n  modal\n})","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from './components/App'\nimport rootReducer from './reducers'\nimport './index.css'\nimport { loadState, saveState } from './localStorage'\n\n//import mockEvents from './mockEvents'\n\nconst persistedState = loadState();\n\nconst store = createStore(rootReducer,\n  persistedState,\n//  mockEvents,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  )\n\nstore.subscribe(() => {\n  saveState(store.getState());\n})\n\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>, \n  document.getElementById('root')\n)\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state')\n    if (serializedState === null) {\n      return undefined;\n    }\n    let state =  JSON.parse(serializedState);\n    \n    state.events = Object.keys(state.events).reduce((acc, cur) =>{\n     return ({ ...acc , [cur]: {...state.events[cur],\n                       start: new Date(state.events[cur].start),\n                       end: new Date(state.events[cur].end)}\n     }) \n    }, {})\n    \n    return state\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serialedState = JSON.stringify(state)\n    localStorage.setItem('state', serialedState)\n  } catch (err) {\n    // Ignore for now\n  }\n}\n"],"sourceRoot":""}