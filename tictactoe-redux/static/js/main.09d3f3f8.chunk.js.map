{"version":3,"sources":["components/Square.js","components/Board.js","containers/BoardContainer.js","actions.js","components/Move.js","components/GameInfo.js","containers/GameInfoContainer.js","components/App.js","reducer.js","index.js"],"names":["Square","_ref","value","onClick","react_default","a","createElement","className","boardLayout","Board","status","squares","map","row","components_Square","calculateWinner","lines","i","length","_lines$i","Object","slicedToArray","b","c","connect","state","history","current","stepNumber","winner","reduce","acc","step","move","desc","concat","xIsNext","getStatus","getSquares","dispatch","x","type","id","Move","GameInfo","moves","components_Move","key","getMoves","App","BoardContainer","GameInfoContainer","initialState","Array","fill","reducer","arguments","undefined","action","slice","changes","objectSpread","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.09d3f3f8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Square = ({ value, onClick }) => (\n  <button className=\"square\" onClick={ onClick }>\n    { value }\n  </button>\n)\n\nexport default Square","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Square from '../components/Square';\n\nconst boardLayout = [[0,1,2],[3,4,5],[6,7,8]]\n\nconst Board = ({status, squares, onClick}) => (\n  <div className=\"game-board\">\n    <div>\n      <div className=\"status\">{status}</div>\n\n      {boardLayout.map((row) =>\n        <div className=\"board-row\">\n          <Square value={squares[row[0]]} onClick={() => onClick(row[0], squares)}/>\n          <Square value={squares[row[1]]} onClick={() => onClick(row[1], squares)}/>\n          <Square value={squares[row[2]]} onClick={() => onClick(row[2], squares)}/>\n        </div>\n      )}\n\n    </div>\n  </div>\n)\n\nBoard.propTypes = {\n  status: PropTypes.string.isRequired,\n  squares: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Board","import { connect } from 'react-redux'\nimport { addMove } from '../actions'\nimport Board from '../components/Board'\n\n\nconst calculateWinner = squares => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nconst getStatus = (state) => {\n  const history = state.history;\n  const current = history[state.stepNumber];\n  const winner = calculateWinner(current.squares);\n\n  const moves = history.reduce((acc, step, move) => {\n    const desc = move ?\n      'Go to move #' + move :\n      'Go to game start';      \n    let result = acc.concat([{\n      move: move,\n      desc: desc\n    }])\n    return result\n  }, [])\n\n  let status;\n  if (winner) {\n    return 'Winner: ' + winner;\n  } else {\n    return 'Next player: ' + (state.xIsNext ? 'X' : 'O');\n  }\n\n}\n\n\nconst getSquares = (state) => {\n  const history = state.history;\n  const current = history[state.stepNumber];\n\n  return current.squares;\n}\n\n\nconst mapStateToProps = state => ({\n  status: getStatus(state),\n  squares: getSquares(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: (x, squares) => {\n  if(squares[x] || calculateWinner(squares)){\n    return\n  }\n  dispatch(addMove(x))}\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Board)","export const addMove = id => ({\n  type: 'ADD_MOVE',\n  id\n})\n\nexport const selectHistory = id => ({\n  type: 'SELECT_HISTORY',\n  id\n})","import React from 'react'\n\nconst Move = ({move, desc, onClick}) => (\n  <li>\n    <button onClick={onClick}>{desc}</button>\n  </li>\n)\n\nexport default Move","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Move from '../components/Move';\n\nconst GameInfo = ({ moves, onClick }) => (\n\n  <div className=\"game-info\">\n    <ol>\n    {moves.map((move) => \n      <Move \n        key={move.move} \n        move={move.move} \n        desc={move.desc}\n        onClick={() => onClick(move.move)}\n      />\n    )}\n    </ol>\n  </div>\n)\n\nGameInfo.propTypes = {\n  moves: PropTypes.arrayOf(PropTypes.shape({\n    move: PropTypes.number.isRequired,\n    desc: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\n\nexport default GameInfo","import { connect } from 'react-redux'\nimport { selectHistory } from '../actions'\nimport GameInfo from '../components/GameInfo'\n\nconst getMoves = (state) => {\n  const history = state.history\n  const moves = history.reduce((acc, step, move) => {\n\n    const desc = move ?\n      'Go to move #' + move :\n      'Go to game start';      \n\n    let result = acc.concat([{\n      move: move,\n      desc: desc\n    }])\n\n    return result\n  }, [])\n\n  return moves;\n}\n\nconst mapStateToProps = (state) => ({\n  moves: getMoves(state)\n})\n\nexport default connect(\n  mapStateToProps,\n  { onClick: selectHistory }\n)(GameInfo)","import React from 'react'\n\nimport BoardContainer from '../containers/BoardContainer'\nimport GameInfoContainer from '../containers/GameInfoContainer'\n\nimport './App.css'\n\nconst App = () => (\n  <div className=\"game\">\n    <BoardContainer />\n    <GameInfoContainer />\n  </div>\n)\n\nexport default App","let initialState =  {\n  history: [{\n    squares: Array(9).fill(null),\n  }],\n  stepNumber: 0,\n  xIsNext: true\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_MOVE':\n\n      const history = state.history.slice(0, state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n\n/*\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n*/      \n      squares[action.id] = state.xIsNext ? 'X' : 'O';\n      \n      let newState = {\n        history: history.concat([{\n          squares: squares,\n        }]),\n        stepNumber: history.length,\n        xIsNext: !state.xIsNext,\n      }\n\n      return newState\n\n    case 'SELECT_HISTORY':\n\n      const changes = {\n        stepNumber: action.id ,\n        xIsNext: (action.id  % 2) === 0\n      }\n\n      return {...state, ...changes}\n  \n    default:\n      return state\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport reducer from './reducer';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}